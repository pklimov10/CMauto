- hosts: WF
  user: root
  tasks:
    - name: wf stop
      service: name=wildfly state=stopped
#переменые
- hosts: PG
  user: root
  vars:
    CM5_PG_DIR: /opt/cm-sochi/backup

#делаем бекап баз
  tasks:
    - name: PG_DUMP_CM5
      become: yes
      become_user: postgres
      command: "pg_dump --port 5432 --username 'postgres' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs=48 --file '{{CM5_PG_DIR}}/CM5-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}' '1'"

- hosts: PG
  user: root
  vars:
    CMJ_PG_DIR: /opt/cm-sochi/backup

  tasks:
    - name: PG_DUMP_CMJ
      become: yes
      become_user: postgres
      command: "pg_dump --port 5432 --username 'postgres' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs=48 --file '{{CMJ_PG_DIR}}/CMj-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}' '2'"

#ищем ear если он есть то обновляем его
- name: Update WF_master
  hosts: WF
  user: root
  vars:
    ear: "{{ lookup('pipe', 'ls -1 /opt/update/*.ear') }}"
    ear_dir: "{{ lookup('pipe', 'ls -1 /opt/wildfly/standalone/deployments/*.ear') }}"
    ear_dir_deployed: "{{ lookup('pipe', '/opt/wildfly/standalone/deployments/*.ear.deployed') }}"
    download_ear: /mnt/yadisk/admsev/sev
    download_war: /mnt/yadisk/admsev/war
    download_sed_svc: /mnt/yadisk/admsev/sed
    WF_DIR: /opt/wildfly/standalone/deployments
    delegate_IP: 192.168.0.147

  tasks:

    - name: Check if the ear.
      command: "/usr/bin/test -e {{ear}}"
      ignore_errors: True
      register: ear_exists

    - name: Clean up.
      file: state=absent path={{ear_dir}}
      ignore_errors: True
      when: ear_exists.rc != 1

    - name: Download ear.
      synchronize:
        src: "{{ear}}"
        dest: "{{WF_DIR}}/"
      delegate_to: "{{delegate_IP}}"
      when: ear_exists.rc != 1

    - name: wf start
      service: name=wildfly state=started
      when: ear_exists.rc != 1

    - name: "wait for ABC to come up"
      uri:
        url: "http://192.168.0.147:8080/cm5div6"
        status_code: 200
      register: result
      until: result.status == 200
      retries: 1500
      delay: 1



- name: Update WF
  hosts: wf
  user: root

  tasks:

    - name: Check if the ear.
      command: /usr/bin/test -e {{download_ear}}/*
      ignore_errors: True
      register: ear_exists

    - name: Clean up.
      file: state=absent path={{{WF_DIR}}/cm5div6*
      when: ear_exists.rc != 1

    - name: Download ear.
      synchronize:
      src: "{{download_ear}}/*"
      dest: "{{WF_DIR}}/"
      delegate_to: {{delegate_IP}}
      when: ear_exists.rc != 1