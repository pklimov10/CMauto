- hosts: WF
  user: root
  tasks:
    - name: wf stop
      service: name=wildfly state=stopped

- hosts: WF_TARGET
  user: root
  tasks:
    - name: wf stop
      service: name=wildfly state=stopped

- hosts: WF_TARGET_APP5
  user: root
  tasks:
    - name: wf stop
      service: name=wildfly state=stopped
    - name: wf1 stop
      service: name=wildfly_1 state=stopped
    - name: wf2 stop
      service: name=wildfly_2 state=stopped
    - name: wf3 stop
      service: name=wildfly_3 state=stopped

#переменые
- hosts: PG_CM5
  user: root
  vars:
    CM5_PG_DIR: /var/lib/libvirt/images/SED2/dumps

  #делаем бекап баз
  tasks:
    - name: PG_DUMP_CM5
      become: yes
      become_user: postgres
      command: "pg_dump --port 5432 --username 'postgres' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs=70 --file '{{CM5_PG_DIR}}/CM5-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}' 'cm5'"

- hosts: PG_CMJ
  user: root
  vars:
    CMJ_PG_DIR: /var/lib/libvirt/images/SED2/dumps

  tasks:
    - name: PG_DUMP_CMJ
      become: yes
      become_user: postgres
      command: "pg_dump --port 5432 --username 'postgres' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs=70 --file '{{CMJ_PG_DIR}}/CMJ-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}' 'cmj'"

#ищем ear если он есть то обновляем его
- name: Update WF_master
  hosts: WF_TARGET
  user: root
  vars:
    ear: "{{ lookup('pipe', 'ls -1 /mnt/yadisk/admsev/sev/*.ear') }}"
    ear_dir: "{{ lookup('pipe', 'ls -1 /opt/wildfly/standalone/deployments/*.ear') }}"
    download_ear: /mnt/yadisk/admsev/sev
    WF_DIR: /opt/wildfly/standalone/deployments
    delegate_IP: nginx

  tasks:

    - name: Check if the ear.
      command: "/usr/bin/test -e {{ear}}"
      ignore_errors: True
      register: ear_exists

    - name: Clean up.
      shell: /bin/rm -rf /opt/wildfly/standalone/deployments/*.ear
      when: ear_exists.rc != 0

    - name: Download ear.
      synchronize:
        src: "{{ear}}"
        dest: "{{WF_DIR}}/"
      delegate_to: "{{delegate_IP}}"
      when: ear_exists.rc != 0

    - name: wf start
      service: name=wildfly state=started
      when: ear_exists.rc != 0

    - name: "wait for cm5div6 to come up"
      uri:
        url: "http://10.10.112.1:8080/cm5div6"
        status_code: 200
      register: result
      until: result.status == 200
      retries: 1500
      delay: 1
      when: ear_exists.rc != 0



- name: WFslave
  hosts: WF
  user: root

  vars:
    ear_target: "{{ lookup('pipe', 'ls -1 /mnt/yadisk/admsev/sev/*.ear') }}"
    ear_dir_target: "{{ lookup('pipe', 'ls -1 /opt/wildfly/standalone/deployments/*.ear') }}"
    download_ear_target: /mnt/yadisk/admsev/sev
    WF_DIR_target: /opt/wildfly/standalone/deployments
    delegate_IP_target: nginx

  tasks:

    - name: Check if the ear WF_TARGET.
      command: "/usr/bin/test -e {{ear_target}}"
      ignore_errors: True
      register: ear_target_exists

    - name: Clean up WF_TARGET.
      shell: /bin/rm -rf /opt/wildfly/standalone/deployments/*.ear
      when: ear_target_exists.rc != 0

    - name: Download ear WF_TARGET.
      synchronize:
        src: "{{ear_target}}"
        dest: "{{WF_DIR_target}}/"
      delegate_to: "{{delegate_IP_target}}"
      when: ear_target_exists.rc != 0

    - name: wf start WF_TARGET
      service: name=wildfly state=started
      when: ear_target_exists.rc != 0

- name: WFTARGETAPP5
  hosts: WF_TARGET_APP5
  user: root

  vars:
    ear_target: "{{ lookup('pipe', 'ls -1 /mnt/yadisk/admsev/sev/*.ear') }}"
    ear_dir_target0: "{{ lookup('pipe', 'ls -1 /opt/wildfly/standalone/deployments/*.ear') }}"
    ear_dir_target1: "{{ lookup('pipe', 'ls -1 /opt/wildfly1/standalone/deployments/*.ear') }}"
    ear_dir_target2: "{{ lookup('pipe', 'ls -1 /opt/wildfly2/standalone/deployments/*.ear') }}"
    ear_dir_target3: "{{ lookup('pipe', 'ls -1 /opt/wildfly3/standalone/deployments/*.ear') }}"
    download_ear_target: /mnt/yadisk/admsev/sev
    WF_DIR_target0: /opt/wildfly/standalone/deployments
    WF_DIR_target1: /opt/wildfly1/standalone/deployments
    WF_DIR_target2: /opt/wildfly2/standalone/deployments
    WF_DIR_target3: /opt/wildfly3/standalone/deployments
    delegate_IP_target: nginx

  tasks:

    - name: Check if the ear WF_TARGET_APP5.
      command: "/usr/bin/test -e {{ear_target}}"
      ignore_errors: True
      register: ear_target_exists

    - name: Clean up WF_TARGET_APP5.
      shell: /bin/rm -rf /opt/wildfly/standalone/deployments/*.ear
      when: ear_target_exists.rc != 0

    - name: Clean up WF_TARGET_APP5_1.
      shell: /bin/rm -rf /opt/wildfly1/standalone/deployments/*.ear
      when: ear_target_exists.rc != 0

    - name: Clean up WF_TARGET_APP5_2.
      shell: /bin/rm -rf /opt/wildfly2/standalone/deployments/*.ear
      when: ear_target_exists.rc != 0

    - name: Clean up WF_TARGET_APP5_3.
      shell: /bin/rm -rf /opt/wildfly3/standalone/deployments/*.ear
      when: ear_target_exists.rc != 0

    - name: Download ear WF_TARGET_APP5.
      synchronize:
        src: "{{ear_target}}"
        dest: "{{WF_DIR_target0}}/"
      delegate_to: "{{delegate_IP_target}}"
      when: ear_target_exists.rc != 0

    - name: Download ear WF_TARGET_APP5_1.
      synchronize:
        src: "{{ear_target}}"
        dest: "{{WF_DIR_target1}}/"
      delegate_to: "{{delegate_IP_target}}"
      when: ear_target_exists.rc != 0

    - name: Download ear WF_TARGET_APP5_2.
      synchronize:
        src: "{{ear_target}}"
        dest: "{{WF_DIR_target2}}/"
      delegate_to: "{{delegate_IP_target}}"
      when: ear_target_exists.rc != 0

    - name: Download ear WF_TARGET_APP5_3.
      synchronize:
        src: "{{ear_target}}"
        dest: "{{WF_DIR_target3}}/"
      delegate_to: "{{delegate_IP_target}}"
      when: ear_target_exists.rc != 0

    - name: wf start WF_TARGET_APP5
      service: name=wildfly state=started
      when: ear_target_exists.rc != 0

    - name: wf start WF_TARGET_APP5_1
      service: name=wildfly_1 state=started
      when: ear_target_exists.rc != 0

    - name: wf start WF_TARGET_APP5_2
      service: name=wildfly_2 state=started
      when: ear_target_exists.rc != 0

    - name: wf start WF_TARGET_APP5_3
      service: name=wildfly_3 state=started
      when: ear_target_exists.rc != 0





  - name: Update SED_SVC
    hosts: SVC
    user: root

    vars:
      war_sed: "{{ lookup('pipe', 'ls -1 /opt/update/*.war') }}"
      war_dir_sed: "{{ lookup('pipe', 'ls -1 /opt/tomcat/cmjapps/wars/*.war') }}"
      download_war_sed: /mnt/yadisk/admsev/web
      TM_DIR_sed:  /opt/tomcat/cmjapps/wars
      delegate_IP: nginx

    tasks:

    - name: Check if the war_sed_svc.
      command: "/usr/bin/test -e {{war_sed}}"
      ignore_errors: True
      register: web_tomcat_target_exists

    - name: tomcat stop
      service: name=tomcat state=stopped
      when: web_tomcat_target_exists.rc != 0


    - name: Clean up.
      file: state=absent path={{war_dir_sed}}
      ignore_errors: True
      when: web_tomcat_target_exists.rc != 0

    - name: Download ear.
      synchronize:
        src: "{{war_sed}}"
        dest: "{{TM_DIR_sed}}/cmj-web.war"
      delegate_to: "{{delegate_IP}}"
      when: web_tomcat_target_exists.rc != 0

    - name: tomcat start
      service: name=tomcat state=started
      when: web_tomcat_target_exists.rc != 0

