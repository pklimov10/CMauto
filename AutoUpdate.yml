- hosts: WF
  user: root
  tasks:
    - name: wf stop
      service: name=wildfly state=stopped

- hosts: WF_TARGET
  user: root
  tasks:
    - name: wf stop
      service: name=wildfly state=stopped

#переменые
- hosts: PG_CM5
  user: root
  vars:
    CM5_PG_DIR: /opt/cm-sochi/backup

#делаем бекап баз
  tasks:
    - name: PG_DUMP_CM5
      become: yes
      become_user: postgres
      command: "pg_dump --port 5432 --username 'postgres' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs=48 --file '{{CM5_PG_DIR}}/CM5-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}' 'cm5'"

- hosts: PG_CMJ
  user: root
  vars:
    CMJ_PG_DIR: /opt/cm-sochi/backup

  tasks:
    - name: PG_DUMP_CMJ
      become: yes
      become_user: postgres
      command: "pg_dump --port 5432 --username 'postgres' --role 'postgres' --format directory --blobs --no-privileges --no-tablespaces --verbose --no-unlogged-table-data --jobs=48 --file '{{CMJ_PG_DIR}}/CMJ-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}' 'cmj'"

#ищем ear если он есть то обновляем его
- name: Update WF_master
  hosts: WF
  user: root
  vars:
    ear: "{{ lookup('pipe', 'ls -1 /opt/update/*.ear') }}"
    ear_dir: "{{ lookup('pipe', 'ls -1 /opt/wildfly/standalone/deployments/*.ear') }}"
    download_ear: /mnt/yadisk/admsev/sev
    WF_DIR: /opt/wildfly/standalone/deployments
    delegate_IP: qa

  tasks:

    - name: Check if the ear.
      command: "/usr/bin/test -e {{ear}}"
      ignore_errors: True
      register: ear_exists

    - name: Clean up.
      shell: "/bin/rm -rf {{WF_DIR}}/*.ear"
      when: ear_exists.rc != 0

    - name: Download ear.
      synchronize:
        src: "{{ear}}"
        dest: "{{WF_DIR}}/"
      delegate_to: "{{delegate_IP}}"
      when: ear_exists.rc != 0

    - name: wf start
      service: name=wildfly state=started
      when: ear_exists.rc != 0

    - name: "wait for cm5div6 to come up"
      uri:
        url: "http://192.168.0.147:8080/cm5div6"
        status_code: 200
      register: result
      until: result.status == 200
      retries: 1500
      delay: 1
      when: ear_exists.rc != 0



- name: WFslave
  hosts: WF_TARGET
  user: root

  vars:
    ear_target: "{{ lookup('pipe', 'ls -1 /opt/update/*.ear') }}"
    ear_dir_target: "{{ lookup('pipe', 'ls -1 /opt/wildfly/standalone/deployments/*.ear') }}"
    download_ear_target: /mnt/yadisk/admsev/sev
    WF_DIR_target: /opt/wildfly/standalone/deployments
    delegate_IP_target: qa

  tasks:

    - name: Check if the ear.
      command: "/usr/bin/test -e {{ear_target}}"
      ignore_errors: True
      register: ear_target_exists

    - name: Clean up.
      shell: "/bin/rm -rf {{WF_DIR_target}}/*.ear"
      when: ear_target_exists.rc != 1

    - name: Download ear.
      synchronize:
        src: "{{ear_target}}"
        dest: "{{WF_DIR_target}}/"
      delegate_to: "{{delegate_IP_target}}"
      when: ear_target_exists.rc != 1

    - name: wf start
      service: name=wildfly state=started
      when: ear_target_exists.rc != 1

- name: Update WEB
  hosts: WEB
  user: root

  vars:
    war: "{{ lookup('pipe', 'ls -1 /opt/update/*.war') }}"
    war_dir: "{{ lookup('pipe', 'ls -1 /opt/tomcat/cmjapps/wars/*.war') }}"
    download_ear: /mnt/yadisk/admsev/sev
    TM_DIR:  /opt/tomcat/cmjapps/wars
    delegate_IP: qa

  tasks:

    - name: Check if the ear.
      command: "/usr/bin/test -e {{war}}"
      ignore_errors: True
      register: web_tomcat_target_exists

    - name: Clean up.
      file: state=absent path={{war_dir}}
      ignore_errors: True
      when: web_tomcat_target_exists.rc != 1

    - name: Download ear.
      synchronize:
        src: "{{war}}"
        dest: "{{TM_DIR}}/cmj-web.war"
      delegate_to: "{{delegate_IP}}"
      when: web_tomcat_target_exists.rc != 1

    - name: tomcat
      service: name=tomcat state=started
      when: web_tomcat_target_exists.rc != 1

